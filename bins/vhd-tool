#!/bin/bash
#
# Copyright (C) Roman V. Posudnevskiy (ramzes_r@yahoo.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation; version 2.1 only.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

SMLOG="/var/log/SMlog"

function exec_cmd(){
   local CMD="$1"
   echo "vhd-tool[$$] $CMD" >> ${SMLOG}
   ( eval "$CMD " ) 2>&1 | sed "~s,^,vhd-tool[$$]," >> ${SMLOG}
   local RET="$?"
   if [ "$RET" != "0" ];then
      echo "vhd-tool[$$]: execution failed (returncode $RET)" >> ${SMLOG}
      #return $RET
      exit $RET
   fi
   return 0
}

echo "vhd-tool[$$] call: $0 $@">> ${SMLOG}

ARGC="$#"  # Number of args, not counting $0
i="1"  # Used as argument index
cmd="${!i}"

while [ "$i" -le "$ARGC" ];
do
    case "${!i}" in
        --source-protocol)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            srcproto="${!i}"
                        fi
                        ;;
        --source-format)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            srcfmt="${!i}"
                        fi
                        ;;
        --destination-protocol)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            dstproto="${!i}"
                        fi
                        ;;
        --destination-format)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            dstfmt="${!i}"
                        fi
                        ;;
        --tar-filename-prefix)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            tarpfx="${!i}"
                        fi
                        ;;
        --progress)
                        ARGS+=("${!i}")
                        progress="-p"
                        ;;
        --machine)
                        ARGS+=("${!i}")
                        machine="-m"
                        ;;
        --direct)
                        ARGS+=("${!i}")
                        direct=1
                        ;;
        --prezeroed)
                        ARGS+=("${!i}")
                        zero=1
                        ;;
        --path)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            path=${!i}
                        fi
                        ;;
        --source)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                        src="${!i}"
                        fi
                        ;;
        --source-fd)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            srcfd="${!i}"
                            let "srcfd = $srcfd - 2"
                        fi
                        ;;
        --destination)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            dst="${!i}"
                        fi
                        ;;
        --destination-fd)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            dstfd="${!i}"
                            let "dstfd = $dstfd - 2"
                        fi
                        ;;
        --destination-size)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            dstsz="${!i}"
                        fi
                        ;;
        --relative-to)
                        i="$((i+1))"
                        if [ -n "${!i}" ]; then
                            base="${!i}"
                        fi
                        ;;
    esac
    i="$((i+1))"
done
aiorbdsrs="`xe pbd-list device-config='image-type: aio' | grep sr-uuid | awk '{print $4} END {if (!NR) print "~~~"}'`"
case "$cmd" in
    stream)
        case "$src" in
            *$aiorbdsrs*)
                echo "vhd-tool[$$] src $src is in >>>$aiorbdsrs<<< ">> ${SMLOG}
                if [ -n "$src" ] && [ "$srcproto"="none" ] && [ "$srcfmt"="hybrid" ] && [ -n "$dstfd" ]; then
                    echo "vhd-tool[$$] srcfmt=hyprid, srcproto=none, src=$src, dstfmt=$dstfmt" >>${SMLOG}
                    src_sr_uuid="`echo $src | awk -F: '{print $1}' | sed 's/\/dev\/sm\/backend\///g' | awk -F/ '{print $1}'`"
                    src_vdi_uuid="`echo $src | awk -F: '{print $1}' | sed 's/\/dev\/sm\/backend\///g' | awk -F/ '{print $2}'`"
                    source="`rbd ls -l --pool RBD_XenStorage-$src_sr_uuid | awk '{print \$1}' | grep $src_vdi_uuid | egrep "SNAP-$src_vdi_uuid\$"`"
                    if [ -z "$source" ]; then
                        source="`rbd ls -l --pool RBD_XenStorage-$src_sr_uuid | awk '{print \$1}' | grep $src_vdi_uuid | egrep "VHD-$src_vdi_uuid\$"`"
                    fi
                    base_sr_uuid="`echo $base | sed 's/\/run\/sr-mount\///g' | awk -F/ '{print $1}'`"
                    base_vdi_uuid="`echo $base | sed 's/\/run\/sr-mount\///g' | awk -F/ '{print $2}'`"

                    # TODO: 
                    # This seems to be a bit risky if the process ends before tweaking around with file descriptor of if multiple "xe" instances are running.
                    # Clarify the intention of this and find a more reliable way.
                    #
                    # Q: What is the intention of this, why is that needed?

                    xe_pid="`pidof xe`"
                    
                    # debug output
                    ps faxwww|grep -C 10 $xe_pid >${SMLOG} 2>&1

                    if [ -z "$xe_pid" ];then
                      echo "ERROR: no xe_pid" >> ${SMLOG}
                      exit 1
                    fi
                    
                    dst_file_name=`readlink /proc/$xe_pid/fd/$dstfd`
                    if [ "$dstfmt" = "vhd" ]; then
                        if [ -z "$base_vdi_uuid" ]; then
                            exec_cmd "rbd export-diff RBD_XenStorage-$src_sr_uuid/$source - | rbd2vhd $machine $progress --vhd $dst_file_name --rbd - --uuid $src_vdi_uuid"
                        else
                            from_snap="SNAP-$base_vdi_uuid"
                            exec_cmd "rbd export-diff --from-snap $from_snap RBD_XenStorage-$src_sr_uuid/$source - | rbd2vhd $machine $progress --vhd $dst_file_name --rbd - --uuid $src_vdi_uuid"
                        fi
                    elif [ "$dstfmt" = "raw" ]; then
                        if [ -z "$base_vdi_uuid" ]; then
                            exec_cmd "rbd export-diff RBD_XenStorage-$src_sr_uuid/$source - | rbd2raw $machine $progress --vhd $dst_file_name --rbd - --uuid $src_vdi_uuid"
                        else
                            echo "[ERROR]: Relative diff export is not supported with raw format"
                            exit 1
                        fi
                    fi
                else
                    echo "vhd-tool[$$] : /bin/vhd-tool-orig \"$@\"" >> ${SMLOG}
                    IFS=""
                    /bin/vhd-tool-orig "$@"
                fi
                ;;
            *)
                echo "vhd-tool[$$] : /bin/vhd-tool-orig \"$@\"" >> ${SMLOG}
                IFS=""
                /bin/vhd-tool-orig "$@"
                ;;
        esac
        ;;
    *)
        echo "vhd-tool[$$] : /bin/vhd-tool-orig \"$@\"" >> ${SMLOG}
        IFS=""
        /bin/vhd-tool-orig "$@"
        ;;
esac
